{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                               Presenting Enigma Analysis\n",
      "\n",
      "                             \"Opportunities don't happen. You create them !! \"\n",
      "                 \n",
      "                         With this vision, the Class 12 batch of 2013, initiated \n",
      "                                Enigma – The Inter-House competition\n",
      "      which has become a calendar event in our school that every student eagerly awaits to participate.\n",
      "         Year after year, the students of Class 12 come up with innovative and exciting ideas to\n",
      "    recreate Enigma with the motive to encourage creativity, curiosity and the spirit of healthy competition.\n",
      "     \n",
      "     This is an intuitive guide taking you back 3 years in the past to see how Enigma has grown over these years.\n",
      "     One can see the trends in popularity and participation over the years of 2019-2021 of various events conducted\n",
      "                                      for the students of classes I-X . \n",
      "     \n",
      "    With this, we expect to predict the most appealing events to the students in an attempt to help the future\n",
      "     batches of class XII and the members of the Student Council to host the most memorable Enigma experience\n",
      "                           for their juniors in the upcoming years of our school.\n",
      "     \n",
      "        \n",
      "                \n",
      "   \n",
      "   \n",
      "Choose the number against the data that you wish to see :\n",
      " 1.Events and participation in the years 2019,2020 and 2021\n",
      " 2.Common events of interest over the years 2019,2020 and 2021\n",
      " 3.Summarized participation in all the years, category-wise\n",
      " 4.Graphical representation of participation in each event, category-wise for all years\n",
      " 5.Trend observed in the MUSIC event year-wise\n",
      " 6.Trend observed in the DANCE event year-wise\n",
      " 7.Trend observed in the PHOTOGRAPHY event year-wise\n",
      " 8.Trend observed in the DEBATE event year-wise\n",
      " 9.Trend observed in the FANCY DRESS event year-wise\n",
      " 10.Trend observed in the ART event year-wise\n",
      " 11.Perspective graphical representation of all events year-wise\n",
      " 12.Category wise participation trends each year\n",
      " 13.Most participation category-wise\n",
      " 14.Most participation year-wise\n",
      " 15.Most participation event-wise\n",
      " 16.Cumulative analysis to predict the most popular event for the coming years\n",
      "Enter number here : 2\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as pl\n",
    "print(\"\"\"                               Presenting Enigma Analysis\n",
    "\n",
    "                             \"Opportunities don't happen. You create them !! \"\n",
    "                 \n",
    "                         With this vision, the Class 12 batch of 2013, initiated \n",
    "                                Enigma – The Inter-House competition\n",
    "      which has become a calendar event in our school that every student eagerly awaits to participate.\n",
    "         Year after year, the students of Class 12 come up with innovative and exciting ideas to\n",
    "    recreate Enigma with the motive to encourage creativity, curiosity and the spirit of healthy competition.\n",
    "     \n",
    "     This is an intuitive guide taking you back 3 years in the past to see how Enigma has grown over these years.\n",
    "     One can see the trends in popularity and participation over the years of 2019-2021 of various events conducted\n",
    "                                      for the students of classes I-X . \n",
    "     \n",
    "    With this, we expect to predict the most appealing events to the students in an attempt to help the future\n",
    "     batches of class XII and the members of the Student Council to host the most memorable Enigma experience\n",
    "                           for their juniors in the upcoming years of our school.\n",
    "     \n",
    "        \n",
    "                \n",
    "   \n",
    "   \"\"\")\n",
    "\n",
    "\n",
    "\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as pl\n",
    "all21={'MUSIC':{'A':92,'B':40,'C':19},'DANCE':{'A':64,'B':29,'C':14},\n",
    "       'PHOTOGRAPHY':{'A':0,'B':47,'C':28},'DEBATE':{'A':24,'B':19,'C':9}\n",
    "      ,'FANCY DRESS':{'A':0,'B':16,'C':7},'ART':{'A':148,'B':66,'C':26},\n",
    "      'COMIC CON':{'A':34,'B':16,'C':4},'B FORTE':{'A':0,'B':13,'C':2},\n",
    "      'LITERARY EVENT':{'A':31,'B':13,'C':11},'ROBES AND ROLES':{'A':12,'B':7,'C':8},\n",
    "      'CURIOUS MINDS':{'A':52,'B':20,'C':12},'SHOW OFF':{'A':58,'B':29,'C':4}}\n",
    "dfall21=pd.DataFrame(all21)\n",
    "#print(dfall21)\n",
    "\n",
    "findf21=dfall21.T\n",
    "findf21['TOTAL']=findf21.sum(axis=1)\n",
    "#findf21\n",
    "\n",
    "all20={'MUSIC':{'A':56,'B':43,'C':12},'DANCE':{'A':47,'B':25,'C':9},\n",
    "       'PHOTOGRAPHY':{'A':0,'B':0,'C':10},'DEBATE':{'A':0,'B':12,'C':9}\n",
    "      ,'FANCY DRESS':{'A':75,'B':0,'C':0},'ART':{'A':0,'B':0,'C':18},\n",
    "      'BEST OUT OF WASTE':{'A':0,'B':82,'C':0},\n",
    "       'FACE PAINTING':{'A':0,'B':9,'C':0},\n",
    "      'QUIZ':{'A':0,'B':28,'C':0},'PET SHOW':{'A':0,'B':10,'C':2},\n",
    "       'MAKE UP':{'A':0,'B':0,'C':6},'COOKING':{'A':0,'B':0,'C':9}\n",
    "       ,'MEME/SHORTFILM':{'A':0,'B':9,'C':8}}\n",
    "dfall20=pd.DataFrame(all20)\n",
    "\n",
    "findf20=dfall20.T\n",
    "findf20['TOTAL']=findf20.sum(axis=1)\n",
    "#findf20\n",
    "\n",
    "\n",
    "all19={'MUSIC':{'A':54,'B':30,'C':15},'DANCE':{'A':40,'B':22,'C':12},\n",
    "       'PHOTOGRAPHY':{'A':0,'B':18,'C':10},'DEBATE':{'A':0,'B':8,'C':13},\n",
    "       'FANCY DRESS':{'A':21,'B':19,'C':8}\n",
    "      ,'COMIC CON':{'A':53,'B':28,'C':0},'ART':{'A':96,'B':71,'C':37},\n",
    "      'QUIZ':{'A':34,'B':62,'C':26},\n",
    "       'ESCAPE ROOM':{'A':0,'B':31,'C':26},\n",
    "       'MINUTE TO WIN IT':{'A':0,'B':19,'C':28},\n",
    "       'TALENT HUNT':{'A':13,'B':19,'C':12},'LITERARY EVENT':{'A':0,'B':41,'C':57}}\n",
    "dfall19=pd.DataFrame(all19)\n",
    "findf19=dfall19.T\n",
    "findf19['TOTAL']=findf19.sum(axis=1)\n",
    "#findf19\n",
    "\n",
    "comyrev={'MUSIC':{2019:99,2020:111,2021:151},'DANCE':{2019:74,2020:81,2021:107},\n",
    "             'PHOTOGRAPHY':{2019:28,2020:10,2021:75},'DEBATE':{2019:21,2020:21,2021:52},\n",
    "             'FANCY DRESS':{2019:48,2020:75,2021:23},'ART':{2019:204,2020:18,2021:240}}\n",
    "cye=pd.DataFrame(comyrev)\n",
    "comyrevdf=cye.T\n",
    "#comyrevdf\n",
    "\n",
    "comcw21={'MUSIC':{'A21':92,'B21':40,'C21':19},'DANCE':{'A21':64,'B21':29,'C21':14},\n",
    "       'PHOTOGRAPHY':{'A21':0,'B21':47,'C21':28},'DEBATE':{'A21':24,'B21':19,'C21':9}\n",
    "      ,'FANCY DRESS':{'A21':0,'B21':16,'C21':7},'ART':{'A21':148,'B21':66,'C21':26}}\n",
    "comcw20={'MUSIC':{'A20':56,'B20':43,'C20':12},'DANCE':{'A20':47,'B20':25,'C20':9},\n",
    "       'PHOTOGRAPHY':{'A20':0,'B20':0,'C20':10},'DEBATE':{'A20':0,'B20':12,'C20':9}\n",
    "      ,'FANCY DRESS':{'A20':75,'B20':0,'C20':0},'ART':{'A20':0,'B20':0,'C20':18}}\n",
    "comcw19={'MUSIC':{'A19':54,'B19':30,'C19':15},'DANCE':{'A19':40,'B19':22,'C19':12},\n",
    "       'PHOTOGRAPHY':{'A19':0,'B19':18,'C19':10},'DEBATE':{'A19':0,'B19':8,'C19':13},\n",
    "       'FANCY DRESS':{'A19':21,'B19':19,'C19':8},'ART':{'A19':96,'B19':71,'C19':37}}\n",
    "com21df=(pd.DataFrame(comcw21)).T\n",
    "\n",
    "com20df=(pd.DataFrame(comcw20)).T\n",
    "\n",
    "com19df=(pd.DataFrame(comcw19)).T\n",
    "#com19df\n",
    "\n",
    "#com20df\n",
    "\n",
    "#com21df\n",
    "frames=[com19df.T,com20df.T,com21df.T]\n",
    "fincomdf=(pd.concat(frames)).T\n",
    "\n",
    "\n",
    "fincomdf['T19']=fincomdf['A19']+fincomdf['B19']+fincomdf['C19']\n",
    "fincomdf['T20']=fincomdf['A20']+fincomdf['B20']+fincomdf['C20']\n",
    "fincomdf['T21']=fincomdf['A21']+fincomdf['B21']+fincomdf['C21']\n",
    "#fincomdf\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "#common events year wise\n",
    "\n",
    "\n",
    "\n",
    "#common events trends each year \n",
    "#music\n",
    "\n",
    "\n",
    "#all combined line graphs\n",
    "\n",
    "\n",
    "\n",
    "#category wise participation trends each year\n",
    "cwpt=(pd.concat(frames)).T\n",
    "cwpt.at['TOTAL',:]=cwpt.sum(axis=0)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "#####################\n",
    "\n",
    "\n",
    "\n",
    "#####################\n",
    "cata=cwpt.A19['TOTAL']+cwpt.A20['TOTAL']+cwpt.A21['TOTAL']\n",
    "catb=cwpt.B19['TOTAL']+cwpt.B20['TOTAL']+cwpt.B21['TOTAL']\n",
    "catc=cwpt.C19['TOTAL']+cwpt.C20['TOTAL']+cwpt.C21['TOTAL']\n",
    "list2=[cata,catb,catc]\n",
    "dict2={cata:'CATEGORY A',catb:'CATEGORY B',catc:'CATEGORY C'}\n",
    "#print(\"The maximum number of participants from the past 3 years, category-wise is\",max(list2),\n",
    "#\"and it is from\",dict2[max(list2)])\n",
    "\n",
    "f=findf19['TOTAL'].sum(axis=0)\n",
    "g=findf20['TOTAL'].sum(axis=0)\n",
    "h=findf21['TOTAL'].sum(axis=0)\n",
    "list1=[f,g,h]\n",
    "dict1={f:'2019',g:'2020',h:'2021'}\n",
    "#print(\"The maximum number of participants from the past 3 years, year-wise is\",max(list1),\n",
    "#\"and it is from the year\",dict1[max(list1)])\n",
    "\n",
    "mus=fincomdf.T19['MUSIC']+fincomdf.T20['MUSIC']+fincomdf.T21['MUSIC']\n",
    "dan=fincomdf.T19['DANCE']+fincomdf.T20['DANCE']+fincomdf.T21['DANCE']\n",
    "pho=fincomdf.T19['PHOTOGRAPHY']+fincomdf.T20['PHOTOGRAPHY']+fincomdf.T21['PHOTOGRAPHY']\n",
    "deb=fincomdf.T19['DEBATE']+fincomdf.T20['DEBATE']+fincomdf.T21['DEBATE']\n",
    "fan=fincomdf.T19['FANCY DRESS']+fincomdf.T20['FANCY DRESS']+fincomdf.T21['FANCY DRESS']\n",
    "art=fincomdf.T19['ART']+fincomdf.T20['ART']+fincomdf.T21['ART']\n",
    "\n",
    "list3=[mus,dan,pho,deb,fan,art]\n",
    "dict3={mus:'MUSIC',dan:'DANCE',pho:'PHOTOGRAPHY',deb:'DEBATE',fan:'FANCY DRESS',art:'ART'}\n",
    "#print(\"The maximum number of participants from the past 3 years, event-wise is\",max(list3),\n",
    "#\"and it is from the\",dict3[max(list3)],\"event\")\n",
    "#print(\"\"\"According to our analysis, the event that will gain the most traction \n",
    "#and poularity in the year 2022 is the\"\"\",dict3[max(list3)],\"event, that will have most participation from\",dict2[max(list2)])\n",
    "\n",
    "\n",
    "\n",
    "##############\n",
    "print(\"\"\"Choose the number against the data that you wish to see :\n",
    " 1.Events and participation in the years 2019,2020 and 2021\n",
    " 2.Common events of interest over the years 2019,2020 and 2021\n",
    " 3.Summarized participation in all the years, category-wise\n",
    " 4.Graphical representation of participation in each event, category-wise for all years\n",
    " 5.Trend observed in the MUSIC event year-wise\n",
    " 6.Trend observed in the DANCE event year-wise\n",
    " 7.Trend observed in the PHOTOGRAPHY event year-wise\n",
    " 8.Trend observed in the DEBATE event year-wise\n",
    " 9.Trend observed in the FANCY DRESS event year-wise\n",
    " 10.Trend observed in the ART event year-wise\n",
    " 11.Perspective graphical representation of all events year-wise\n",
    " 12.Category wise participation trends each year\n",
    " 13.Most participation category-wise\n",
    " 14.Most participation year-wise\n",
    " 15.Most participation event-wise\n",
    " 16.Cumulative analysis to predict the most popular event for the coming years\"\"\")\n",
    "\n",
    "inp=int(input(\"Enter number here : \"))\n",
    "if inp==1:\n",
    "    print(\" \")\n",
    "    print(\"              2019\")\n",
    "    print(\" \")\n",
    "    print(findf19)\n",
    "    print(\" \")\n",
    "    print(\"              2020\")\n",
    "    print(\" \")\n",
    "    print(findf20)\n",
    "    print(\" \")\n",
    "    print(\"              2021\")\n",
    "    print(\" \")\n",
    "    print(findf21)\n",
    "elif inp==2:\n",
    "    b=[]\n",
    "    for i in findf21.columns:\n",
    "        a=list(findf21.loc[:,i])\n",
    "        b.append(a)\n",
    "        #print(b)\n",
    "    y=np.arange(12)\n",
    "    pl.bar(y+0.00,b[0],color='b',width=0.25,label='Category A')\n",
    "    pl.bar(y+0.25,b[1],color='r',width=0.25,label='Category B')\n",
    "    pl.bar(y+0.50,b[2],color='g',width=0.25,label='Category C')\n",
    "    xticks=list(findf21.index)\n",
    "    pl.legend(loc=1)\n",
    "    pl.figure(figsize=(15,7))\n",
    "    #pl.title('Category wise multi bar graph for 2021')\n",
    "\n",
    "\n",
    "\n",
    "    b=[]\n",
    "    for i in findf20.columns:\n",
    "        k=list(findf20.loc[:,i])\n",
    "        b.append(k)\n",
    "    \n",
    "\n",
    "\n",
    "    y=np.arange(13)\n",
    "    pl.bar(y+0.00,b[0],color='b',width=0.25,label='Category A')\n",
    "    pl.bar(y+0.25,b[1],color='r',width=0.25,label='Category B')\n",
    "    pl.bar(y+0.50,b[2],color='g',width=0.25,label='Category C')\n",
    "    pl.legend(loc=1)\n",
    "    pl.figure(figsize=(15,7))\n",
    "\n",
    "            \n",
    "    b=[]\n",
    "    for i in findf19.columns:\n",
    "        o=list(findf19.loc[:,i])\n",
    "        b.append(o)\n",
    "        #print(b)\n",
    "    y=np.arange(12)\n",
    "    pl.bar(y+0.00,b[0],color='b',width=0.25,label='Category A')\n",
    "    pl.bar(y+0.25,b[1],color='r',width=0.25,label='Category B')\n",
    "    pl.bar(y+0.50,b[2],color='g',width=0.25,label='Category C')\n",
    "    pl.legend(loc=1)\n",
    "    pl.figure(figsize=(15,7))\n",
    "elif inp==3:\n",
    "    print(fincomdf)\n",
    "elif inp==4:\n",
    "    b=[]\n",
    "    for i in comyrevdf.columns:\n",
    "        a=list(comyrevdf.loc[:,i])\n",
    "        b.append(a)\n",
    "    \n",
    "#print(b)\n",
    "\n",
    "    y=np.arange(6)\n",
    "    pl.bar(y+0.00,b[0],color='b',width=0.25,label='Category A')\n",
    "    pl.bar(y+0.25,b[1],color='r',width=0.25,label='Category B')\n",
    "    pl.bar(y+0.50,b[2],color='g',width=0.25,label='Category C')\n",
    "    xticks=list(comyrevdf.index)\n",
    "    pl.legend(loc=1)\n",
    "    pl.figure(figsize=(15,7))\n",
    "\n",
    "elif inp==5:\n",
    "    pl.plot(['2019','2020','2021'],[fincomdf.T19['MUSIC'],fincomdf.T20['MUSIC'],fincomdf.T21['MUSIC']],label='MUSIC')\n",
    "    pl.title(\"MUSIC\")\n",
    "    pl.show()\n",
    "elif inp==6:\n",
    "    pl.plot(['2019','2020','2021'],[fincomdf.T19['DANCE'],fincomdf.T20['DANCE'],fincomdf.T21['DANCE']],label='DANCE')\n",
    "    pl.title(\"DANCE\")\n",
    "    pl.show()\n",
    "elif inp==7:\n",
    "    pl.plot(['2019','2020','2021'],[fincomdf.T19['PHOTOGRAPHY'],fincomdf.T20['PHOTOGRAPHY'],fincomdf.T21['PHOTOGRAPHY']],label='PHOTOGRAPHY')\n",
    "    pl.title(\"PHOTOGRAPHY\")\n",
    "    pl.show()\n",
    "elif inp==8:\n",
    "    pl.plot(['2019','2020','2021'],[fincomdf.T19['DEBATE'],fincomdf.T20['DEBATE'],fincomdf.T21['DEBATE']],label='DEBATE')\n",
    "    pl.title(\"DEBATE\")\n",
    "    pl.show()\n",
    "elif inp==9:\n",
    "    pl.plot(['2019','2020','2021'],[fincomdf.T19['FANCY DRESS'],fincomdf.T20['FANCY DRESS'],fincomdf.T21['FANCY DRESS']],label='FANCY DRESS')\n",
    "    pl.title(\"FANCY DRESS\")\n",
    "    pl.show()\n",
    "elif inp==10:\n",
    "    pl.plot(['2019','2020','2021'],[fincomdf.T19['ART'],fincomdf.T20['ART'],fincomdf.T21['ART']],label='ART')\n",
    "    pl.title(\"ART\")\n",
    "    pl.show()\n",
    "elif inp==11:\n",
    "    pl.plot(['2019','2020','2021'],[fincomdf.T19['MUSIC'],fincomdf.T20['MUSIC'],fincomdf.T21['MUSIC']],label='MUSIC')\n",
    "    pl.plot(['2019','2020','2021'],[fincomdf.T19['DANCE'],fincomdf.T20['DANCE'],fincomdf.T21['DANCE']],label='DANCE')\n",
    "    pl.plot(['2019','2020','2021'],[fincomdf.T19['PHOTOGRAPHY'],fincomdf.T20['PHOTOGRAPHY'],fincomdf.T21['PHOTOGRAPHY']],label='PHOTOGRAPHY')\n",
    "    pl.plot(['2019','2020','2021'],[fincomdf.T19['DEBATE'],fincomdf.T20['DEBATE'],fincomdf.T21['DEBATE']],label='DEBATE')\n",
    "    pl.plot(['2019','2020','2021'],[fincomdf.T19['FANCY DRESS'],fincomdf.T20['FANCY DRESS'],fincomdf.T21['FANCY DRESS']],label='FANCY DRESS')\n",
    "    pl.plot(['2019','2020','2021'],[fincomdf.T19['ART'],fincomdf.T20['ART'],fincomdf.T21['ART']],label='ART')\n",
    "    pl.legend(loc=1)\n",
    "    pl.title(\"All combined line graph\")\n",
    "    pl.show()\n",
    "elif inp==12:\n",
    "    pl.plot(['2019','2020','2021'],[cwpt.A19['TOTAL'],cwpt.A20['TOTAL'],cwpt.A21['TOTAL']],label='CATEGORY A')\n",
    "    pl.plot(['2019','2020','2021'],[cwpt.B19['TOTAL'],cwpt.B20['TOTAL'],cwpt.B21['TOTAL']],label='CATEGORY B')\n",
    "    pl.plot(['2019','2020','2021'],[cwpt.C19['TOTAL'],cwpt.C20['TOTAL'],cwpt.C21['TOTAL']],label='CATEGORY C')\n",
    "    pl.legend(loc=1)\n",
    "    pl.title(\"Category wise participation trends each year\")\n",
    "    pl.show()\n",
    "elif inp==13:\n",
    "    print(\"The maximum number of participants from the past 3 years, category-wise is\",max(list2),\"and it is from\",dict2[max(list2)])\n",
    "elif inp==14:\n",
    "    print(\"The maximum number of participants from the past 3 years, year-wise is\",max(list1),\"and it is from the year\",dict1[max(list1)])\n",
    "elif inp==15:\n",
    "    print(\"The maximum number of participants from the past 3 years, event-wise is\",max(list3),\"and it is from the\",dict3[max(list3)],\"event\")\n",
    "elif inp==16:\n",
    "    print(\"\"\"According to our analysis, the event that will gain the most traction and poularity in the year 2022 is the\"\"\",dict3[max(list3)],\"event, that will have most participation from\",dict2[max(list2)])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
